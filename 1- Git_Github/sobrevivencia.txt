cat - verifica as blob 
pwd - verifica aonde voc√™ est√°
eral $ (ssh-agent -s)
cd - direcionar
cd .. - voltar
tecla tab- completa 
mkdir- cria pasta
rmdir- remove pasta 
dir - listar 
ls -a mpsra pasta oculta 
git remote add origin
ssh-keygen -t ed25519 -c email
ssh-add id25519
_________________________________________________________________________________________________________________________________________________________________________________
git add: Adiciona um arquivo ao √≠ndice
git add [file] - Adiciona ou atualiza mudan√ßas para irem para o nosso reposit√≥rio.
git add . - Voc√™ pode adicionar todos os arquivo usando o ".".
_________________________________________________________________________________________________________________________________________________________________________________
git branch - Lista, cria ou exclui ramifica√ß√µes.
git branch -d [ramifica√ß√£o] - Exclui ramifica√ß√µes.
_________________________________________________________________________________________________________________________________________________________________________________
git checkout [hash] - Alterna ramifica√ß√µes ou restaura arquivos da √°rvore de trabalho.
git checkout -b [minha-feature] - Cria uma nova ramifica√ß√£o no nosso projeto.
git checkout [minha-ramifica√ß√£o] - Vai para a ramifica√ß√£o criada pelo desenvolvedor.
git checkout master - Vai para a ramifica√ß√£o master.
git checkout -- [arquivo-modificado] - Descarta as mudan√ßas feitas no arquivo. Use antes de dar o git add
_________________________________________________________________________________________________________________________________________________________________________________
git clean -f - Remove arquivos n√£o rastreados.
git config --global user.name "Seu Nome" Define o nome do usu√°rio
git config --global user.email "seuemail@exemplo.com" Define o endere√ßo de e-mail associado ao usu√°rio
git config --global core.editor vim - Editor. Aqui voc√™ pode escolher o editor padr√£o do git;
git config --list - Use para ver o resultado das suas confirugar√ß√µes.
git config: Define as informa√ß√µes de usu√°rio no Git
git commit: Confirma as altera√ß√µes no reposit√≥rio
git commit -m "message" - Registra altera√ß√µes no reposit√≥rio.
git commit -am "message" - Atualiza o reposit√≥rio e registra altera√ß√µes no reposit√≥rio ao mesmo tempo.
git commit --amend -m "message" - Troca a √∫ltima mensagem feita no commit.
git clone: Obt√©m uma c√≥pia de um reposit√≥rio Git existente
_________________________________________________________________________________________________________________________________________________________________________________
git diff - Mostra o que foi alterado em um arquivo, de vermelho o que foi exclu√≠do, de verde o que foi adicionando. Use-o antes do git add.
_________________________________________________________________________________________________________________________________________________________________________________
git init: Inicia um novo reposit√≥rio Git
_________________________________________________________________________________________________________________________________________________________________________________
git log - Mostra os pontos na "linha do tempo" do reposit√≥rio (commits).
git log --oneline - Mostra os pontos na "linha do tempo" de forma mais resumida.
git log --abbrev-commit - Ao inv√©s de mostrar o hash com 40 caracteres, mostra apenas com 7 caracteres.
git log --pretty=oneline - Faz com que caiba toda a mesagem de commit em uma linha.
git log --graph - Desenha uma representa√ß√£o gr√°fica dos commits no lado esquerdo da sa√≠da do terminal.
git log --grep="texto" - Busca por commits que tenha a a palavra "texto".
_________________________________________________________________________________________________________________________________________________________________________________
git merge [branch] - Faz a fus√£o de uma branch X com uma branch Y. Para fazer a fus√£o das branchs voc√™ tem que estar na branch que vai recber a outra branch.
git mv [arquivo] [diret√≥rio] - Move um arquivo para um diret√≥rio especificado
git mv [nome-original] [novo-nome] - Renomea um arquivo.
_________________________________________________________________________________________________________________________________________________________________________________
git push: Envia altera√ß√µes para o reposit√≥rio remoto
git pull: Busca e mescla altera√ß√µes no reposit√≥rio remoto para o reposit√≥rio local
_________________________________________________________________________________________________________________________________________________________________________________
git reset --hard [hash] - Reverte um commit.
git remote - Verifica se existe um reposit√≥rio remoto
_________________________________________________________________________________________________________________________________________________________________________________
git show - Apresenta o √∫ltimo ponto na "hist√≥ria" do nosso projeto.
git show [hash] - Apresenta determinado ponto na "hist√≥ria" do nosso projeto
git status: Lista todos os arquivos que devem ser confirmados





Qualquer linha da mensagem do commit n√£o pode ter mais de 100 caracteres! Assim fica mais f√°cil para ler no GitHub, Gitlab e outras ferramentas de git.

Tipos: Deve ser um dos seguintes:

build: Altera√ß√µes que afetam o sistema de build ou depend√™ncias externas.
static: Altera√ß√µes no conte√∫do de arquivos est√°ticos (dados .json, imagens, etc).
ci: Altera√ß√µes em nossos arquivos e scripts de configura√ß√£o de CI.
cd: Altera√ß√µes em nossos arquivos e scripts de configura√ß√£o para CD.
docs: Somente altera√ß√µes na documenta√ß√£o.
feat: Um novo recurso.
fix: Uma corre√ß√£o de bug da aplica√ß√£o.
perf: Uma altera√ß√£o de c√≥digo que melhora o desempenho.
refactor: Uma altera√ß√£o de c√≥digo que n√£o corrige um bug nem adiciona um recurso.
improve: Alguma altera√ß√£o de c√≥digo que melhore o comportamento de um recurso.
style: Altera√ß√µes que n√£o afetam o significado do c√≥digo (espa√ßo em branco, formata√ß√£o, ponto e v√≠rgula, etc).
test: Adicionando testes ausentes ou corrigindo testes existentes.
revert: Reverter para um commit anterior.


Emojis: Emojis para o t√≠tulo do commit:

Commit type	Emoji
Initial commit	üéâ :tada:
Version tag	üîñ :bookmark:
New feature	‚ú® :sparkles:
Bugfix	üêõ :bug:
Docker	üê≥ :whale:
Fix names	üìù :pencil:
Fix for iOS	üçé :apple:
Fix for Android	ü§ñ :robot:
Security Fix	üîí :lock:
Metadata	üìá :card_index:
Refactoring	‚ôªÔ∏è :recycle:
Documentation	üìö :books:
Internationalization	üåê :globe_with_meridians:
Accessibility	‚ôø :wheelchair:
Performance	üêé :racehorse:
Cosmetic	üé® :art:
Tooling	üîß :wrench:
Tests	üö® :rotating_light:
Deprecation	üí© :poop:
Removal	üóëÔ∏è :wastebasket:
Work In Progress (WIP)	üöß :construction:
Additional comments	üí¨ :speech_balloon:

